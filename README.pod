=pod

=encoding utf8

=head1 NAME

L<Novel::Robot> 小说下载器

=head2 支持小说站点

    jjwxc   : http://www.jjwxc.net
    dddbbb  : http://www.dddbbb.net
    kanunu  : http://book.kanunu.org
    shunong : http://book.shunong.com
    asxs    : http://www.23hh.com
    luoqiu  : http://www.luoqiu.com

=head2 支持小说输出形式

    html
    jekyll
    txt
    wordpress

=head1 TOOL

=head2 下载小说

    get_novel.pl -b [小说目录页url] -t [目标文件类型] -C [是否写目录] -S [是否显示进度条] -i [章节]

    get_novel.pl -b "http://www.dddbbb.net/html/18451/index.html" -t txt
    get_novel.pl -b "http://www.jjwxc.net/onebook.php?novelid=2456" -t html
    get_novel.pl -b "http://www.jjwxc.net/onebook.php?novelid=2456" -t jekyll -T [标签] -c [类别]  -R [说明]

    get_novel.pl -w [作者] -b [书名] -f [txt文件或目录] -r [章节标题匹配的正则式] -t [目标文件类型]
    get_novel.pl -w 顾漫 -b 何以笙箫默 -f hy1.txt -t html
    get_novel.pl -w 顾漫 -b 何以笙箫默 -f hy1.txt,hy2.txt,dir1 -r "第[ \\t\\d]+章" -t html

=head2 分段下载小说

    get_novel_split.pl -b [小说目录页url] -t [目标类型] -n [分段章节数] -C [是否写目录] -S [是否显示进度条]

    get_novel_split.pl -b "http://www.jjwxc.net/onebook.php?novelid=2456" -n 10 -t jekyll

=head2 将小说发布到wordpress

    put_novel.pl -b [小说目录页url] -c [类别] -T [标签] -W [wordpress页面地址] -u [用户名] -p [密码] 

    put_novel.pl -b "http://www.dddbbb.net/html/18451/index.html" -c 言情 -W http://xxx.xxx.com  -u xxx -p xxx
    put_novel.pl -b "http://www.jjwxc.net/onebook.php?novelid=2456" -c 原创 -W http://xxx.xxx.com  -u xxx -p xxx

    put_novel.pl -w [作者名] -b [用户名] -f [源文件] -c [类别] -T [标签] -W [wordpress页面地址] -u [用户名] -p [密码] 
    put_novel.pl -w 顾漫 -b 何以笙箫默 -f hy.txt -c 言情 -W http://xxx.xxx.com  -u xxx -p xxx
    put_novel.pl -w 施定柔 -b 迷行记 -f mx1.txt,mx2.txt -c 言情 -W http://xxx.xxx.com  -u xxx -p xxx

=head2 转换小说格式
    
    convert_novel.pl -f [源文件] -t [目标文件类型(小写)]

    需要预先安装calibre的ebook-convert，源文件名称格式为 [作者-书名]

    convert_novel.pl -f 施定柔-迷侠记.html -t mobi
    convert_novel.pl -f 施定柔-迷侠记.html -t epub

    convert_novel.pl -f [源文件] -t jekyll -T [标签] -c [类别] -o [目标文件名]

    convert_novel.pl -f  施定柔-迷侠记.html -t jekyll -T "定柔三迷,楚荷衣" -c "原创"

=head2 批量处理小说(支持to txt/html/...)

    novel_robot.pl -w [writer_url] -m [select_menu_or_not] -t [packer_type]
    novel_robot.pl -s [site] -q [query_type] -k [query_keyword] -m [select_menu_or_not] -t [packer_type]

    novel_robot.pl -w "http://www.jjwxc.net/oneauthor.php?authorid=3243" -m 1 -t html
    novel_robot.pl -s jjwxc -q 作品 -k 何以笙箫默 -m 1 -t html

=head1 ARG

    -A : only poster, 贴子只看楼主
    -C : with toc, 小说保存时是否生成目录(默认是)
    -F : max floor num, 贴子最大楼层数
    -I : query/board/writer page range, 结果列表只取 x-y 页
    -M : max query_item/board_tiezi/writer_novel num, 结果列表最多取x项
    -N : min word num , 贴子每层最小字数
    -P : max process num, 进程个数 
    -R : remark , 一些补充说明
    -S : show progress bar, 显示进度条(默认显示)
    -T : tag list，标签，例如 顾漫
    -W : wordpress 地址
    -b : book url，小说目录页 / book name，书名
    -c : category list，小说类别，例如 原创
    -f : txt file / txt file dir, 指定文本文件来源(可以是单个目录或文件)
    -i : chapter id range，只取 x-y 章
    -k : query keyword, 查询的关键字
    -m : select menu, 是否输出小说选择菜单
    -n : split chapter num, 单个文件最大章节数(一本小说可以分多个文件，每个文件最多n章)
    -o : output filename, 保存的小说文件名
    -p : password, wordpress 密码
    -q : query type, 查询的类型
    -r : chapter regex, 指定分割章节的正则表达式(例如："第[ \\t\\d]+章")
    -s : site, 指定查询的站点
    -t : save type, 小说保存类型，例如txt/html
    -u : wordpress 用户
    -w : writer url 作者专栏URL / writer name 作者名

=head1 FUNCTION

=head2 new 初始化

设置解析引擎，目标文件类型

    my $xs = Novel::Robot->new(
    site => 'jjwxc',
    type => 'html', 
    );

=head2 set_parser 设置解析引擎

    $xs->set_parser('jjwxc');

=head2 set_packer 设置打包引擎

    $xs->set_packer('html');

=head2 get_book 下载整本小说

    $xs->set_parser('jjwxc');
    my $index_url = 'http://www.jjwxc.net/onebook.php?novelid=2456';
    $xs->get_book($index_url);


    $xs->set_parser('txt');
    $xs->get_book({ writer => '顾漫', book => '何以笙箫默', 
            path => [ '/somepath/somefile.txt' ] });

=head2 select_book 在Term下选择小说

    $xs->set_parser('jjwxc');

    my $writer_url = 'http://www.jjwxc.net/oneauthor.php?authorid=3243';
    my $writer_ref = $xs->{parser}->get_writer_ref($writer_url);
    my $select_ref = $xs->select_book($writer_ref);

    my $query_type = '作者';
    my $keyword='顾漫';
    $books_ref = $xs->{parser}->get_query_ref($query_type, $keyword);
    my $select_ref = $xs->select_book($query_ref);

=cut
